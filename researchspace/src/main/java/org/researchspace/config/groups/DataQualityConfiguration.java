/**
 * ResearchSpace
 * Copyright (C) 2020, Â© Trustees of the British Museum
 * Copyright (C) 2015-2019, metaphacts GmbH
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.

 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */

package org.researchspace.config.groups;

import javax.inject.Inject;

import org.researchspace.config.ConfigurationParameter;
import org.researchspace.config.InvalidConfigurationException;
import org.researchspace.services.storage.api.PlatformStorage;

public class DataQualityConfiguration extends ConfigurationGroupBase {

    private static final String ID = "dataQuality";
    private static final String DESCRIPTION = "Configuration options that affect execution of data quality checks.";

    @Inject
    public DataQualityConfiguration(PlatformStorage platformStorage) throws InvalidConfigurationException {
        super(ID, DESCRIPTION, platformStorage);
    }

    /**
     * Type of SHACL engine to be used.
     * 
     * @default rdfunit
     */
    @ConfigurationParameter
    public String getShaclEngine() {
        return getString("shaclEngine", "rdfunit");
    }

    /**
     * Query delay in ms between SPARQL requests send by data quality engine.
     * 
     * @default 0
     */
    @ConfigurationParameter
    public Integer getQueryDelay() {
        return getInteger("queryDelay", 0);
    }

    /**
     * Max number of violations that is captured in violation report. This limit
     * will be applied to all SPARQL queries send/generated by data quality engine.
     * 
     * @default 100
     */
    @ConfigurationParameter
    public Integer getQueryLimit() {
        return getInteger("queryLimit", 100);
    }

    /**
     * If violation results need to be requested page by page (applies LIMIT ...
     * OFFSET ..), this number specifies size of the pages.
     * 
     * @default 0
     */
    @ConfigurationParameter
    public Integer getPagination() {
        return getInteger("pagination", 0);
    }

    @Override
    public void assertConsistency() {
        // TODO Auto-generated method stub
    }
}
